#include<stdio.h>

typedef union
{
  int n;
  char name[20];
} UN;

typedef struct
{
  int a;
  char b[30];
  typedef struct
  {
    int b;
    char c[10];
  } INNER;
} OUTER;

typedef struct
{
  int g;
  typedef union
  {
    int d;
    float x;
  } UNINSTRUCT;
} STRUCTOVERUN;

int main()
{
  printf("The size of the standalone union (having int and char[20] is %d\n", sizeof(UN));
  printf("The size of union (having int and float) inside a structure is %d\n", sizeof(STRUCTOVERUN.UNINSTRUCT));
  printf("The size of nested structures (outer having int and char[30] and inner having int and char[10] is %d\n", sizeof(OUTER));
  printf("The size of inner structure (having int and char[10]) is %d\n", sizeof(OUTER>INNER));
  printf("The size of structure (having int) with a union inside it (having int and float) is %d\n", sizeof(STRUCTOVERUN));
  return 0;
}
